-- CREATE SCHEMA
CREATE SCHEMA IF NOT EXISTS "chatop-oc";

-- REMOVE TABLES
DROP TABLE IF EXISTS "chatop-oc"."messages";
DROP TABLE IF EXISTS "chatop-oc"."rentals";
DROP TABLE IF EXISTS "chatop-oc"."users";


-- USERS
CREATE TABLE "chatop-oc"."users"(
   "id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1) NOT NULL,
   "email" character varying(255) NOT NULL,
   "name" character varying(255) NOT NULL,
   "password" character varying(255) NOT NULL,
   "api_token" UUID NOT NULL,
   "created_at" timestamp with time zone NOT NULL,
   "updated_at" timestamp with time zone NOT NULL
);

CREATE UNIQUE INDEX users_email_unique ON "chatop-oc".users USING btree (email);

COMMENT ON COLUMN "chatop-oc"."users"."id" IS 'Unique non natural id';
COMMENT ON COLUMN "chatop-oc"."users"."name" IS 'Lastname and firstname';
COMMENT ON COLUMN "chatop-oc"."users"."email" IS 'Email used for authentification';
COMMENT ON COLUMN "chatop-oc"."users"."created_at" IS 'Created at date';
COMMENT ON COLUMN "chatop-oc"."users"."updated_at" IS 'Update at date';

-- RENTALS
CREATE TABLE "chatop-oc"."rentals"(
   "id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1) NOT NULL,
   "name" character varying(255) NOT NULL,
   "surface" integer NOT NULL,
   "price" integer NOT NULL,
   "pictures" json NOT NULL,
   "description" character varying(2000) NOT NULL,
   "owner_id" bigint NOT NULL,
   "created_at" timestamp with time zone NOT NULL,
   "updated_at" timestamp with time zone NOT NULL
);

CREATE INDEX rentals_owner_id ON "chatop-oc"."rentals" USING btree ("owner_id");

COMMENT ON COLUMN "chatop-oc"."rentals"."id" IS 'Unique non natural id';
COMMENT ON COLUMN "chatop-oc"."rentals"."name" IS 'Title describing the rental';
COMMENT ON COLUMN "chatop-oc"."rentals"."surface" IS 'Available surface in square meters';
COMMENT ON COLUMN "chatop-oc"."rentals"."price" IS 'Price in euros cents';
COMMENT ON COLUMN "chatop-oc"."rentals"."pictures" IS 'Array of pictures urls';
COMMENT ON COLUMN "chatop-oc"."rentals"."description" IS 'Plain text description for the rental';
COMMENT ON COLUMN "chatop-oc"."rentals"."owner_id" IS 'User id FK : the owner of the rental';
COMMENT ON COLUMN "chatop-oc"."rentals"."created_at" IS 'Created at date';
COMMENT ON COLUMN "chatop-oc"."rentals"."updated_at" IS 'Update at date';

-- MESSAGES
CREATE TABLE "chatop-oc"."messages"(
   "id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1) NOT NULL,
   "text_message" character varying(2000) NOT NULL,
   "rental_id" bigint NOT NULL,
   "user_id" bigint NOT NULL,
   "created_at" timestamp with time zone NOT NULL,
   "updated_at" timestamp with time zone NOT NULL
);

CREATE INDEX messages_rental_id ON "chatop-oc"."messages" USING btree ("rental_id");
CREATE INDEX messages_user_id ON "chatop-oc"."messages" USING btree ("user_id");

COMMENT ON COLUMN "chatop-oc"."messages"."id" IS 'Unique non natural id';
COMMENT ON COLUMN "chatop-oc"."messages"."text_message" IS 'Plain text message content';
COMMENT ON COLUMN "chatop-oc"."messages"."rental_id" IS 'Rental id FK';
COMMENT ON COLUMN "chatop-oc"."messages"."user_id" IS 'User id FK';
COMMENT ON COLUMN "chatop-oc"."messages"."created_at" IS 'Created at date';
COMMENT ON COLUMN "chatop-oc"."messages"."updated_at" IS 'Update at date';


-- FOREIGN KEYS
ALTER TABLE IF EXISTS "chatop-oc"."messages" DROP CONSTRAINT IF EXISTS "messages_rentals_rental_id";
ALTER TABLE IF EXISTS "chatop-oc"."messages" ADD CONSTRAINT "messages_rentals_rental_id" FOREIGN KEY ("rental_id") REFERENCES "chatop-oc"."rentals"("id");
ALTER TABLE IF EXISTS "chatop-oc"."messages" DROP CONSTRAINT IF EXISTS "messages_users_user_id";
ALTER TABLE IF EXISTS "chatop-oc"."messages" ADD CONSTRAINT "messages_users_user_id" FOREIGN KEY ("user_id") REFERENCES "chatop-oc"."users"("id");
ALTER TABLE IF EXISTS "chatop-oc"."rentals" DROP CONSTRAINT IF EXISTS "rentals_users_owner_id";
ALTER TABLE IF EXISTS "chatop-oc"."rentals" ADD CONSTRAINT "rentals_users_owner_id" FOREIGN KEY ("owner_id") REFERENCES "chatop-oc"."users"("id");

